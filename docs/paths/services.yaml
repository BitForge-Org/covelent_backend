/services:
  post:
    summary: Create a new service
    tags:
      - Service
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - title
              - description
              - category
              - pricingOptions
            properties:
              title:
                type: string
                description: Service title
                example: Home Cleaning
              description:
                type: string
                description: Service description
                example: Professional home cleaning service
              category:
                type: string
                description: Category ObjectId
                example: 60f7c0b8e1b1c8a1b8e1b1c8
              pricingOptions:
                type: string
                description: >
                  JSON stringified array of pricing options.  
                  Example:  
                  '[{"label":"1 BHK","price":1000,"duration":60},{"label":"2 BHK","price":1500,"duration":90}]'
              image:
                type: string
                format: binary
                description: Service image file (required, max 1)
              media:
                type: array
                items:
                  type: string
                  format: binary
                description: Up to 5 media files (optional)
              locationAvailable:
                type: string
                description: >
                  JSON stringified array of locations, e.g.  
                  '[{"city":"City","state":"State","coordinates":{"lan":77.1,"lat":28.6}}]'
  get:
    summary: Get all services with optional filters
    tags:
      - Service
    parameters:
      - in: query
        name: categoryId
        schema:
          type: string
        description: The ObjectId of the category
      - in: query
        name: minPrice
        schema:
          type: number
        description: Minimum price
      - in: query
        name: maxPrice
        schema:
          type: number
        description: Maximum price
      - in: query
        name: avgRating
        schema:
          type: number
        description: Minimum average rating
      - in: query
        name: isFeatured
        schema:
          type: boolean
        description: Filter for featured services
      - in: query
        name: city
        schema:
          type: string
        description: Filter by city (locationAvailable)
      - in: query
        name: state
        schema:
          type: string
        description: Filter by state (locationAvailable)
      - in: query
        name: lan
        schema:
          type: number
        description: Filter by longitude (locationAvailable.coordinates.lan)
      - in: query
        name: lat
        schema:
          type: number
        description: Filter by latitude (locationAvailable.coordinates.lat)
    responses:
      '200':
        description: Services retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                statusCode:
                  type: integer
                  example: 200
                data:
                  type: array
                  items:
                    $ref: './../schemas/Service.yaml'
                message:
                  type: string
                  example: Services retrieved successfully
      '404':
        description: No services found
      '400':
        description: Invalid filter
      '500':
        description: Server error
