/auth/provider/upload-documents:
  post:
    summary: Provider uploads PAN and aadhaar documents
    description: |
      Allows a provider to upload PAN and aadhaar images after registration. Sets `isProfileCompleted` to true when both are uploaded.
    tags:
      - Auth
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              aadhaarFrontImage:
                type: string
                format: binary
              aadhaarBackImage:
                type: string
                format: binary
              panImage:
                type: string
                format: binary
    responses:
      '200':
        description: Documents uploaded
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    isProfileCompleted:
                      type: boolean
                    aadhaar:
                      type: object
                    pan:
                      type: object
                message:
                  type: string
/auth/register:
  post:
    summary: Register a new user (role always 'user')
    description: |
      Register a new user. The role is always set to 'user' regardless of what is sent in the request. Use `/auth/register/provider` to register a provider.
    tags:
      - Auth
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              fullName:
                type: string
              email:
                type: string
                format: email
              password:
                type: string
                format: password
              dateOfBirth:
                type: string
                format: date
              phoneNumber:
                type: string
              avatar:
                type: string
                format: binary
    responses:
      '201':
        description: User registered successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    user:
                      $ref: '../schemas/User.yaml#/User'
                    accessToken:
                      type: string
                    refreshToken:
                      type: string
                    role:
                      type: string
                    dateOfBirth:
                      type: string
                    isVerified:
                      type: boolean
                    isActive:
                      type: boolean
                    phoneNumber:
                      type: string
                message:
                  type: string

/auth/register/provider:
  post:
    summary: Register a new provider (role always 'provider')
    description: |
      Register a new provider. The role is always set to 'provider' regardless of what is sent in the request. PAN and aadhaar are not required at registration; they can be uploaded later. The profile will have `isProfileCompleted: false` until documents are uploaded.
    tags:
      - Auth
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              fullName:
                type: string
              email:
                type: string
                format: email
              password:
                type: string
                format: password
              dateOfBirth:
                type: string
                format: date
              phoneNumber:
                type: string
              avatar:
                type: string
                format: binary
    responses:
      '201':
        description: Provider registered successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    user:
                      $ref: '../schemas/User.yaml#/User'
                    accessToken:
                      type: string
                    refreshToken:
                      type: string
                    role:
                      type: string
                    dateOfBirth:
                      type: string
                    isVerified:
                      type: boolean
                    isActive:
                      type: boolean
                    phoneNumber:
                      type: string
                message:
                  type: string

/auth/login:
  post:
    summary: Login user
    tags:
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
    responses:
      '200':
        description: User logged in successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    user:
                      $ref: '../schemas/User.yaml#/User'
                    accessToken:
                      type: string
                    refreshToken:
                      type: string
                message:
                  type: string

/auth/login/provider:
  post:
    summary: Login provider
    tags:
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
    responses:
      '200':
        description: Provider logged in successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    user:
                      $ref: '../schemas/User.yaml#/User'
                    accessToken:
                      type: string
                    refreshToken:
                      type: string
                message:
                  type: string

/auth/logout:
  post:
    summary: Logout user
    tags:
      - Auth
    security:
      - BearerAuth: []
    responses:
      '200':
        description: User logged out
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                message:
                  type: string

/auth/refresh-token:
  post:
    summary: Refresh access token
    tags:
      - Auth
    requestBody:
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              refreshToken:
                type: string
    responses:
      '200':
        description: Access token refreshed
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    accessToken:
                      type: string
                    refreshToken:
                      type: string
                message:
                  type: string

/auth/change-password:
  post:
    summary: Change current password
    tags:
      - Auth
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              oldPassword:
                type: string
              newPassword:
                type: string
    responses:
      '200':
        description: Password changed successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                message:
                  type: string

/auth/forgot-password:
  post:
    summary: Request password reset OTP
    tags:
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
    responses:
      '200':
        description: Reset OTP sent to email
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    email:
                      type: string
                message:
                  type: string

/auth/reset-password:
  post:
    summary: Reset password using OTP
    tags:
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
    responses:
      '200':
        description: Password reset successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                message:
                  type: string

/auth/verify-otp:
  post:
    summary: Verify OTP for password reset
    tags:
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              otp:
                type: string
    responses:
      '200':
        description: OTP verified successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    email:
                      type: string
                message:
                  type: string
